name: mylittlellm

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/localhost/11434 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - open-webui-data:/app/backend/data
    ports:
      - "8080:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - DISABLE_AUTH=True
      - ENABLE_SIGNUP=False
      - DEFAULT_USER_ROLES=admin
      - AUTH_MODE=none
      - WEBUI_AUTH=none
      - ENABLE_OPENAI_API=False
      - ENABLE_DIRECT_CONNECTIONS=False
      - CORS_ALLOW_ORIGIN=http://localhost:8080,http://127.0.0.1:8080
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - ai-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - uptime-kuma-data:/app/data
    ports:
      - "3001:3001"
    depends_on:
      ollama:
        condition: service_healthy
      open-webui:
        condition: service_healthy
    networks:
      - ai-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3000 open-webui ollama uptime-kuma
    depends_on:
      open-webui:
        condition: service_started
      ollama:
        condition: service_started
      uptime-kuma:
        condition: service_started
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Centralized logging with Loki + Grafana
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ai-network
    volumes:
      - loki-data:/loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - ai-network
    restart: unless-stopped
    depends_on:
      - loki

networks:
  ai-network:
    name: ai-network
    driver: bridge

volumes:
  ollama-data:
    name: ollama-data
  open-webui-data:
    name: open-webui-data
  uptime-kuma-data:
    name: uptime-kuma-data
  loki-data:
    name: loki-data
  grafana-data:
    name: grafana-data 
